{"ast":null,"code":"var _jsxFileName = \"/Users/mejlumian/Documents/Practicum/Dev/mesto-react/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\n//import ConfirmPopup from './components/ConfirmPopup/ConfirmPopup';\nimport api from '../utils/Api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = useState({});\n\n  // Стейты попапов\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsEditPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [userName, setUserName] = useState(''); // стейт для userName\n  const [userDescription, setUserDescription] = useState(''); // стейт для userDescription\n  const [userAvatar, setUserAvatar] = useState(''); // стейт для userAvatar\n  const [cards, setCards] = useState([]);\n  const isOpen = isEditAvatarPopupOpen || isEditProfilePopupOpen || isAddPlacePopupOpen || selectedCard;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [userData, cardsData] = await Promise.all([api.getUserInfo(), api.getInitialCards()]);\n        setCurrentUser(userData);\n        setCards(cardsData);\n      } catch (error) {\n        console.error('Произошла ошибка при загрузке данных:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  function handleCardClick(props) {\n    setSelectedCard(props);\n  }\n\n  // Обработчик открытия попапа аватара\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  // Обработчик открытия попапа профиля\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  // Обработчик открытия попапа добавления карточки\n  function handleAddPlaceClick() {\n    setIsEditPlacePopupOpen(true);\n  }\n  function closeAllPopups() {\n    setIsEditPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  }\n  useEffect(() => {\n    function closeByEscape(evt) {\n      if (evt.key === 'Escape') {\n        closeAllPopups();\n      }\n    }\n    if (isOpen) {\n      // навешиваем только при открытии\n      document.addEventListener('keydown', closeByEscape);\n      return () => {\n        document.removeEventListener('keydown', closeByEscape);\n      };\n    }\n  }, [isOpen]);\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем статус лайка на карточке\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(item => item._id === card._id ? newCard : item));\n    }).catch(console.error);\n  }\n\n  // Функция удаления карточки\n  function handleCardDelete(card) {\n    api.removeCard(card._id).then(() => {\n      setCards(state => state.filter(item => item._id !== card._id));\n    }).catch(console.error);\n  }\n  function handleUpdateUser(user) {\n    const userData = {\n      name: user.name,\n      about: user.about\n    };\n    api.editUserInfo(userData).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(console.error);\n  }\n  function handleUpdateAvatar(user) {\n    api.setAvatar({\n      avatar: user.avatar\n    }).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(console.error);\n  }\n  function handleAddPlaceSubmit(card) {\n    const cardData = {\n      name: card.name,\n      link: card.link,\n      owner: currentUser._id\n    };\n    api.addCard(cardData).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(console.error);\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(PopupWithForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        onClose: closeAllPopups,\n        card: selectedCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        userAvatar: userAvatar,\n        userName: userName,\n        userDescription: userDescription,\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        cards: cards,\n        onCardClick: handleCardClick,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8d/hmxBrSiioD6mDcWEzJ+c/+9o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Main","Footer","PopupWithForm","EditAvatarPopup","EditProfilePopup","AddPlacePopup","ImagePopup","api","CurrentUserContext","jsxDEV","_jsxDEV","App","_s","currentUser","setCurrentUser","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsEditPlacePopupOpen","selectedCard","setSelectedCard","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","isOpen","fetchData","userData","cardsData","Promise","all","getUserInfo","getInitialCards","error","console","handleCardClick","props","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","closeByEscape","evt","key","document","addEventListener","removeEventListener","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","then","newCard","state","map","item","catch","handleCardDelete","removeCard","filter","handleUpdateUser","user","name","about","editUserInfo","res","handleUpdateAvatar","setAvatar","avatar","handleAddPlaceSubmit","cardData","link","owner","addCard","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClose","onUpdateAvatar","onUpdateUser","onAddPlace","onEditAvatar","onEditProfile","onCardClick","onCardLike","onCardDelete","_c","$RefreshReg$"],"sources":["/Users/mejlumian/Documents/Practicum/Dev/mesto-react/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\n//import ConfirmPopup from './components/ConfirmPopup/ConfirmPopup';\nimport api from '../utils/Api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nfunction App() {\n\n  const [currentUser, setCurrentUser] = useState({});\n\n  // Стейты попапов\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsEditPlacePopupOpen] = useState(false);\n\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  const [userName, setUserName] = useState(''); // стейт для userName\n  const [userDescription, setUserDescription] = useState(''); // стейт для userDescription\n  const [userAvatar, setUserAvatar] = useState(''); // стейт для userAvatar\n  const [cards, setCards] = useState([]);\n\n  const isOpen = isEditAvatarPopupOpen || isEditProfilePopupOpen || isAddPlacePopupOpen || selectedCard\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [userData, cardsData] = await Promise.all([\n          api.getUserInfo(),\n          api.getInitialCards()\n        ]);\n\n        setCurrentUser(userData);\n        setCards(cardsData);\n      } catch (error) {\n        console.error('Произошла ошибка при загрузке данных:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n\n  function handleCardClick(props) {\n    setSelectedCard(props);\n  }\n\n  // Обработчик открытия попапа аватара\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n  }\n  // Обработчик открытия попапа профиля\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n  }\n  // Обработчик открытия попапа добавления карточки\n  function handleAddPlaceClick() {\n    setIsEditPlacePopupOpen(true)\n  }\n\n  function closeAllPopups() {\n    setIsEditPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  useEffect(() => {\n    function closeByEscape(evt) {\n      if (evt.key === 'Escape') {\n        closeAllPopups();\n      }\n    }\n    if (isOpen) { // навешиваем только при открытии\n      document.addEventListener('keydown', closeByEscape);\n      return () => {\n        document.removeEventListener('keydown', closeByEscape);\n      }\n    }\n  }, [isOpen])\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем статус лайка на карточке\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      setCards((state) => state.map((item) => item._id === card._id ? newCard : item));\n    })\n      .catch(console.error);\n  }\n\n  // Функция удаления карточки\n  function handleCardDelete(card) {\n    api.removeCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((item) => item._id !== card._id));\n      })\n      .catch(console.error);\n  }\n\n  function handleUpdateUser(user) {\n    const userData = {\n      name: user.name,\n      about: user.about\n    };\n\n    api.editUserInfo(userData)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(console.error);\n  }\n\n  function handleUpdateAvatar(user) {\n    api.setAvatar({ avatar: user.avatar })\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(console.error)\n  }\n\n  function handleAddPlaceSubmit(card) {\n    const cardData = {\n      name: card.name,\n      link: card.link,\n      owner: currentUser._id\n    };\n\n    api.addCard(cardData)\n      .then(newCard => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch(console.error)\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"root\">\n\n        <PopupWithForm />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n\n        <ImagePopup\n          onClose={closeAllPopups}\n          card={selectedCard}\n        />\n\n        <Header />\n        <Main\n          userAvatar={userAvatar}\n          userName={userName}\n          userDescription={userDescription}\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          cards={cards}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n        <Footer />\n\n      </div>\n    </CurrentUserContext.Provider>\n\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}