{"ast":null,"code":"var _jsxFileName = \"/Users/mejlumian/Documents/Practicum/Dev/mesto-react/src/components/AddPlacePopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm/PopupWithForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddPlacePopup({\n  isOpen,\n  onClose,\n  onAddPlace\n}) {\n  _s();\n  //Стейты для имени и ссылки на картинку\n  const [cardTitle, setCardTitle] = useState('');\n  const [cardLink, setCardLink] = useState('');\n\n  //Обработчик установки названия места\n  function handleCardTitle(event) {\n    setCardTitle(event.target.value);\n  }\n\n  //Обработчик установки картинки (ссылки на картинку)\n  function handleCardLink(event) {\n    setCardLink(event.target.value);\n  }\n\n  //Обработчик сабмита формы поп-апа добавления карточки\n  function handleSubmit(event) {\n    event.preventDefault();\n    onAddPlace({\n      name: cardTitle,\n      link: cardLink\n    });\n  }\n  useEffect(() => {\n    setCardLink('');\n    setCardTitle('');\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    title: 'Новое место',\n    name: 'place',\n    buttonName: 'Сохранить',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"popup__input-item\",\n        type: \"text\",\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        name: \"popupInputPlaceName\",\n        required: true,\n        minLength: \"2\",\n        maxLength: \"30\",\n        onChange: handleCardTitle,\n        value: cardTitle ? cardTitle : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__input-error\",\n        id: \"popupInputPlaceName-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"popup__input-item\",\n        type: \"url\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n        name: \"popupInputImageLink\",\n        required: true,\n        onChange: handleCardLink,\n        value: cardLink ? cardLink : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__input-error\",\n        id: \"popupInputImageLink-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPlacePopup, \"I7i/1xsrE8Zb3bbxUvx86Tokr3Y=\");\n_c = AddPlacePopup;\nexport default AddPlacePopup;\nvar _c;\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"names":["React","useState","useEffect","PopupWithForm","jsxDEV","_jsxDEV","AddPlacePopup","isOpen","onClose","onAddPlace","_s","cardTitle","setCardTitle","cardLink","setCardLink","handleCardTitle","event","target","value","handleCardLink","handleSubmit","preventDefault","name","link","onSubmit","title","buttonName","children","className","type","placeholder","required","minLength","maxLength","onChange","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/mejlumian/Documents/Practicum/Dev/mesto-react/src/components/AddPlacePopup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm/PopupWithForm';\n\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\n\n   //Стейты для имени и ссылки на картинку\n   const [cardTitle, setCardTitle] = useState('');\n   const [cardLink, setCardLink] = useState('');\n \n   //Обработчик установки названия места\n   function handleCardTitle(event) {\n     setCardTitle(event.target.value)\n   }\n \n   //Обработчик установки картинки (ссылки на картинку)\n   function handleCardLink(event) {\n     setCardLink(event.target.value)\n   }\n \n   //Обработчик сабмита формы поп-апа добавления карточки\n   function handleSubmit(event) {\n     event.preventDefault();\n \n     onAddPlace({\n       name: cardTitle,\n       link: cardLink\n     })\n   }\n \n   useEffect(() => {\n     setCardLink('')\n     setCardTitle('')\n   }, [isOpen])\n\n  return (\n    <PopupWithForm\n      isOpen = { isOpen }\n      onClose = { onClose }\n      onSubmit = { handleSubmit }\n      title = {'Новое место'}\n      name = {'place'}\n      buttonName = {'Сохранить'}\n      >\n    \n      <div className=\"popup__input-container\">\n        <input\n          className=\"popup__input-item\"\n          type=\"text\"\n          placeholder=\"Название\"\n          name=\"popupInputPlaceName\"\n          required\n          minLength=\"2\"\n          maxLength=\"30\"\n          onChange={handleCardTitle}\n          value={cardTitle ? cardTitle : ''}\n        />\n\n        <span className=\"popup__input-error\" id=\"popupInputPlaceName-error\"></span>\n\n        <input\n          className=\"popup__input-item\"\n          type=\"url\"\n          placeholder=\"Ссылка на картинку\"\n          name=\"popupInputImageLink\"\n          required\n          onChange={handleCardLink}\n          value={cardLink ? cardLink : ''}\n        />\n\n        <span className=\"popup__input-error\" id=\"popupInputImageLink-error\"></span>\n\n      </div>  \n    </PopupWithForm>\n  );\n}\n  \nexport default AddPlacePopup;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,aAAaA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAErD;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,SAASc,eAAeA,CAACC,KAAK,EAAE;IAC9BJ,YAAY,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC;;EAEA;EACA,SAASC,cAAcA,CAACH,KAAK,EAAE;IAC7BF,WAAW,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC;;EAEA;EACA,SAASE,YAAYA,CAACJ,KAAK,EAAE;IAC3BA,KAAK,CAACK,cAAc,CAAC,CAAC;IAEtBZ,UAAU,CAAC;MACTa,IAAI,EAAEX,SAAS;MACfY,IAAI,EAAEV;IACR,CAAC,CAAC;EACJ;EAEAX,SAAS,CAAC,MAAM;IACdY,WAAW,CAAC,EAAE,CAAC;IACfF,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAEb,oBACEF,OAAA,CAACF,aAAa;IACZI,MAAM,EAAKA,MAAQ;IACnBC,OAAO,EAAKA,OAAS;IACrBgB,QAAQ,EAAKJ,YAAc;IAC3BK,KAAK,EAAI,aAAc;IACvBH,IAAI,EAAI,OAAQ;IAChBI,UAAU,EAAI,WAAY;IAAAC,QAAA,eAG1BtB,OAAA;MAAKuB,SAAS,EAAC,wBAAwB;MAAAD,QAAA,gBACrCtB,OAAA;QACEuB,SAAS,EAAC,mBAAmB;QAC7BC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,kDAAU;QACtBR,IAAI,EAAC,qBAAqB;QAC1BS,QAAQ;QACRC,SAAS,EAAC,GAAG;QACbC,SAAS,EAAC,IAAI;QACdC,QAAQ,EAAEnB,eAAgB;QAC1BG,KAAK,EAAEP,SAAS,GAAGA,SAAS,GAAG;MAAG;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eAEFjC,OAAA;QAAMuB,SAAS,EAAC,oBAAoB;QAACW,EAAE,EAAC;MAA2B;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAE3EjC,OAAA;QACEuB,SAAS,EAAC,mBAAmB;QAC7BC,IAAI,EAAC,KAAK;QACVC,WAAW,EAAC,oGAAoB;QAChCR,IAAI,EAAC,qBAAqB;QAC1BS,QAAQ;QACRG,QAAQ,EAAEf,cAAe;QACzBD,KAAK,EAAEL,QAAQ,GAAGA,QAAQ,GAAG;MAAG;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eAEFjC,OAAA;QAAMuB,SAAS,EAAC,oBAAoB;QAACW,EAAE,EAAC;MAA2B;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEpB;AAAC5B,EAAA,CAvEQJ,aAAa;AAAAkC,EAAA,GAAblC,aAAa;AAyEtB,eAAeA,aAAa;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}