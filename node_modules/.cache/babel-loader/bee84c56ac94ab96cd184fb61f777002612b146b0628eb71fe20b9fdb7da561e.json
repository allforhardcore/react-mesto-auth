{"ast":null,"code":"export class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = {\n      authorization: options.authorization,\n      'Content-Type': 'application/json'\n    };\n  }\n  _checkResponse(response) {\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`Что-то пошло не так... (${response.status})`);\n  }\n  _request(url, method, data) {\n    const options = {\n      method: method,\n      headers: this.headers\n    };\n    if (data) {\n      options.body = JSON.stringify(data);\n    }\n    return fetch(`${this.baseUrl}${url}`, options).then(this._checkResponse);\n  }\n  getUserInfo() {\n    return this._request('/users/me', 'GET');\n  }\n  getInitialCards() {\n    return this._request('/cards', 'GET');\n  }\n  editUserInfo(data) {\n    return this._request('/users/me', 'PATCH', data);\n  }\n  setAvatar(data) {\n    return this._request('/users/me/avatar', 'PATCH', data);\n  }\n  addCard(data) {\n    return this._request('/cards', 'POST', data);\n  }\n  removeCard(cardId) {\n    return this._request(`/cards/${cardId}`, 'DELETE');\n  }\n  likeCard(cardId) {\n    return this._request(`/cards/likes/${cardId}`, 'PUT');\n  }\n  removeLike(cardId) {\n    return this._request(`/cards/likes/${cardId}`, 'DELETE');\n  }\n  changeLikeCardStatus(cardId, isLiked) {\n    const method = isLiked ? 'PUT' : 'DELETE';\n    return this._request(`/cards/likes/${cardId}`, method);\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-76',\n  authorization: '5cd71d81-2a88-497e-99eb-8405496caa7c'\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","baseUrl","headers","authorization","_checkResponse","response","ok","json","Error","status","_request","url","method","data","body","JSON","stringify","fetch","then","getUserInfo","getInitialCards","editUserInfo","setAvatar","addCard","removeCard","cardId","likeCard","removeLike","changeLikeCardStatus","isLiked","api"],"sources":["/Users/mejlumian/Documents/Practicum/Dev/mesto-react/src/utils/Api.js"],"sourcesContent":["export class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = {\n      authorization: options.authorization,\n      'Content-Type': 'application/json',\n    };\n  };\n\n  _checkResponse(response) {\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`Что-то пошло не так... (${response.status})`);\n  }\n\n  _request(url, method, data) {\n    const options = {\n      method: method,\n      headers: this.headers,\n    };\n\n    if (data) {\n      options.body = JSON.stringify(data);\n    }\n\n    return fetch(`${this.baseUrl}${url}`, options).then(this._checkResponse);\n  }\n\n  getUserInfo() {\n    return this._request('/users/me', 'GET');\n  }\n\n  getInitialCards() {\n    return this._request('/cards', 'GET');\n  }\n\n  editUserInfo(data) {\n    return this._request('/users/me', 'PATCH', data);\n  }\n\n  setAvatar(data) {\n    return this._request('/users/me/avatar', 'PATCH', data);\n  }\n\n  addCard(data) {\n    return this._request('/cards', 'POST', data);\n  }\n\n  removeCard(cardId) {\n    return this._request(`/cards/${cardId}`, 'DELETE');\n  }\n\n  likeCard(cardId) {\n    return this._request(`/cards/likes/${cardId}`, 'PUT');\n  }\n\n  removeLike(cardId) {\n    return this._request(`/cards/likes/${cardId}`, 'DELETE');\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    const method = isLiked ? 'PUT' : 'DELETE';\n    return this._request(`/cards/likes/${cardId}`, method);\n  }\n \n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-76',\n  authorization: '5cd71d81-2a88-497e-99eb-8405496caa7c',\n});\n\nexport default api;"],"mappings":"AAAA,OAAO,MAAMA,GAAG,CAAC;EACfC,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,CAACC,OAAO,GAAGD,OAAO,CAACC,OAAO;IAC9B,IAAI,CAACC,OAAO,GAAG;MACbC,aAAa,EAAEH,OAAO,CAACG,aAAa;MACpC,cAAc,EAAE;IAClB,CAAC;EACH;EAEAC,cAAcA,CAACC,QAAQ,EAAE;IACvB,IAAIA,QAAQ,CAACC,EAAE,EAAE;MACf,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB;IACA,MAAM,IAAIC,KAAK,CAAE,2BAA0BH,QAAQ,CAACI,MAAO,GAAE,CAAC;EAChE;EAEAC,QAAQA,CAACC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAE;IAC1B,MAAMb,OAAO,GAAG;MACdY,MAAM,EAAEA,MAAM;MACdV,OAAO,EAAE,IAAI,CAACA;IAChB,CAAC;IAED,IAAIW,IAAI,EAAE;MACRb,OAAO,CAACc,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IACrC;IAEA,OAAOI,KAAK,CAAE,GAAE,IAAI,CAAChB,OAAQ,GAAEU,GAAI,EAAC,EAAEX,OAAO,CAAC,CAACkB,IAAI,CAAC,IAAI,CAACd,cAAc,CAAC;EAC1E;EAEAe,WAAWA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACT,QAAQ,CAAC,WAAW,EAAE,KAAK,CAAC;EAC1C;EAEAU,eAAeA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACV,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC;EACvC;EAEAW,YAAYA,CAACR,IAAI,EAAE;IACjB,OAAO,IAAI,CAACH,QAAQ,CAAC,WAAW,EAAE,OAAO,EAAEG,IAAI,CAAC;EAClD;EAEAS,SAASA,CAACT,IAAI,EAAE;IACd,OAAO,IAAI,CAACH,QAAQ,CAAC,kBAAkB,EAAE,OAAO,EAAEG,IAAI,CAAC;EACzD;EAEAU,OAAOA,CAACV,IAAI,EAAE;IACZ,OAAO,IAAI,CAACH,QAAQ,CAAC,QAAQ,EAAE,MAAM,EAAEG,IAAI,CAAC;EAC9C;EAEAW,UAAUA,CAACC,MAAM,EAAE;IACjB,OAAO,IAAI,CAACf,QAAQ,CAAE,UAASe,MAAO,EAAC,EAAE,QAAQ,CAAC;EACpD;EAEAC,QAAQA,CAACD,MAAM,EAAE;IACf,OAAO,IAAI,CAACf,QAAQ,CAAE,gBAAee,MAAO,EAAC,EAAE,KAAK,CAAC;EACvD;EAEAE,UAAUA,CAACF,MAAM,EAAE;IACjB,OAAO,IAAI,CAACf,QAAQ,CAAE,gBAAee,MAAO,EAAC,EAAE,QAAQ,CAAC;EAC1D;EAEAG,oBAAoBA,CAACH,MAAM,EAAEI,OAAO,EAAE;IACpC,MAAMjB,MAAM,GAAGiB,OAAO,GAAG,KAAK,GAAG,QAAQ;IACzC,OAAO,IAAI,CAACnB,QAAQ,CAAE,gBAAee,MAAO,EAAC,EAAEb,MAAM,CAAC;EACxD;AAEF;AAEA,MAAMkB,GAAG,GAAG,IAAIhC,GAAG,CAAC;EAClBG,OAAO,EAAE,6CAA6C;EACtDE,aAAa,EAAE;AACjB,CAAC,CAAC;AAEF,eAAe2B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}