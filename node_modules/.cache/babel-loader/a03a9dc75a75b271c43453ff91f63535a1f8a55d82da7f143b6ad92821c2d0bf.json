{"ast":null,"code":"var _jsxFileName = \"/Users/mejlumian/Documents/Practicum/Dev/mesto-react/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\n//import ConfirmPopup from './components/ConfirmPopup/ConfirmPopup';\nimport api from '../utils/Api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = useState({});\n  const isOpen = isEditAvatarPopupOpen || isEditProfilePopupOpen || isAddPlacePopupOpen || selectedCard;\n  useEffect(() => {\n    function closeByEscape(evt) {\n      if (evt.key === 'Escape') {\n        closeAllPopups();\n      }\n    }\n    if (isOpen) {\n      // навешиваем только при открытии\n      document.addEventListener('keydown', closeByEscape);\n      return () => {\n        document.removeEventListener('keydown', closeByEscape);\n      };\n    }\n  }, [isOpen]);\n\n  // Стейты попапов\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsEditPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [userName, setUserName] = useState(''); // стейт для userName\n  const [userDescription, setUserDescription] = useState(''); // стейт для userDescription\n  const [userAvatar, setUserAvatar] = useState(''); // стейт для userAvatar\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [userData, cardsData] = await Promise.all([api.getUserInfo(), api.getInitialCards()]);\n        setCurrentUser(userData);\n        setCards(cardsData);\n      } catch (error) {\n        console.error('Произошла ошибка при загрузке данных:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  function handleCardClick(props) {\n    setSelectedCard(props);\n  }\n\n  // Обработчик открытия попапа аватара\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  // Обработчик открытия попапа профиля\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  // Обработчик открытия попапа добавления карточки\n  function handleAddPlaceClick() {\n    setIsEditPlacePopupOpen(true);\n  }\n  function closeAllPopups() {\n    setIsEditPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  }\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем статус лайка на карточке\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(item => item._id === card._id ? newCard : item));\n    }).catch(err => console.log(err));\n  }\n\n  // Функция удаления карточки\n  function handleCardDelete(card) {\n    api.removeCard(card._id).then(() => {\n      setCards(state => state.filter(item => item._id !== card._id));\n    }).catch(err => console.log(err));\n  }\n  function handleUpdateUser(user) {\n    const userData = {\n      name: user.name,\n      about: user.about\n    };\n    api.editUserInfo(userData).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n  function handleUpdateAvatar(user) {\n    api.setAvatar({\n      avatar: user.avatar\n    }).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n  function handleAddPlaceSubmit(card) {\n    const cardData = {\n      name: card.name,\n      link: card.link,\n      owner: currentUser._id\n    };\n    api.addCard(cardData).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(PopupWithForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        onClose: closeAllPopups,\n        card: selectedCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        userAvatar: userAvatar,\n        userName: userName,\n        userDescription: userDescription,\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        cards: cards,\n        onCardClick: handleCardClick,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8lBvM7H5O6q8qYROepO4+1VLECo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Main","Footer","PopupWithForm","EditAvatarPopup","EditProfilePopup","AddPlacePopup","ImagePopup","api","CurrentUserContext","jsxDEV","_jsxDEV","App","_s","currentUser","setCurrentUser","isOpen","isEditAvatarPopupOpen","isEditProfilePopupOpen","isAddPlacePopupOpen","selectedCard","closeByEscape","evt","key","closeAllPopups","document","addEventListener","removeEventListener","setIsEditAvatarPopupOpen","setIsEditProfilePopupOpen","setIsEditPlacePopupOpen","setSelectedCard","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","fetchData","userData","cardsData","Promise","all","getUserInfo","getInitialCards","error","console","handleCardClick","props","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","then","newCard","state","map","item","catch","err","log","handleCardDelete","removeCard","filter","handleUpdateUser","user","name","about","editUserInfo","res","handleUpdateAvatar","setAvatar","avatar","handleAddPlaceSubmit","cardData","link","owner","addCard","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClose","onUpdateAvatar","onUpdateUser","onAddPlace","onEditAvatar","onEditProfile","onCardClick","onCardLike","onCardDelete","_c","$RefreshReg$"],"sources":["/Users/mejlumian/Documents/Practicum/Dev/mesto-react/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\n//import ConfirmPopup from './components/ConfirmPopup/ConfirmPopup';\nimport api from '../utils/Api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nfunction App() {\n\n  const [currentUser, setCurrentUser] = useState({});\n\n  const isOpen = isEditAvatarPopupOpen || isEditProfilePopupOpen || isAddPlacePopupOpen || selectedCard\n\n  useEffect(() => {\n    function closeByEscape(evt) {\n      if(evt.key === 'Escape') {\n        closeAllPopups();\n      }\n    }\n    if(isOpen) { // навешиваем только при открытии\n      document.addEventListener('keydown', closeByEscape);\n      return () => {\n        document.removeEventListener('keydown', closeByEscape);\n      }\n    }\n  }, [isOpen]) \n\n  \n\n  // Стейты попапов\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false); \n  const [isAddPlacePopupOpen, setIsEditPlacePopupOpen] = useState(false); \n\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  const [userName, setUserName] = useState(''); // стейт для userName\n  const [userDescription, setUserDescription] = useState(''); // стейт для userDescription\n  const [userAvatar, setUserAvatar] = useState(''); // стейт для userAvatar\n  const [cards, setCards] = useState([]); \n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [userData, cardsData] = await Promise.all([\n          api.getUserInfo(),\n          api.getInitialCards()\n        ]);\n  \n        setCurrentUser(userData);\n        setCards(cardsData);\n      } catch (error) {\n        console.error('Произошла ошибка при загрузке данных:', error);\n      }\n    };\n  \n    fetchData();\n  }, []);\n\n  \n  function handleCardClick(props) {\n    setSelectedCard(props);\n  }\n\n\n  // Обработчик открытия попапа аватара\n  function handleEditAvatarClick () { \n    setIsEditAvatarPopupOpen(true) \n  }\n  // Обработчик открытия попапа профиля\n  function handleEditProfileClick () { \n    setIsEditProfilePopupOpen(true) \n  }\n  // Обработчик открытия попапа добавления карточки\n  function handleAddPlaceClick () {\n     setIsEditPlacePopupOpen(true) \n    }\n\n  function closeAllPopups() {\n      setIsEditPlacePopupOpen(false);\n      setIsEditAvatarPopupOpen(false);\n      setIsEditProfilePopupOpen(false);\n      setSelectedCard(null);\n    }\n\n    function handleCardLike(card) {\n      // Снова проверяем, есть ли уже лайк на этой карточке\n      const isLiked = card.likes.some(i => i._id === currentUser._id);\n  \n      // Отправляем запрос в API и получаем статус лайка на карточке\n      api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n        setCards((state) => state.map((item) => item._id === card._id ? newCard : item));\n    })\n        .catch(err => console.log(err));\n    }\n\n    // Функция удаления карточки\n    function handleCardDelete(card) {\n      api.removeCard(card._id)\n        .then(() => {\n          setCards((state) => state.filter((item) => item._id !== card._id)); \n        })\n        .catch(err => console.log(err));\n    }\n\n    function handleUpdateUser(user) {\n      const userData = {\n        name: user.name,\n        about: user.about\n      };\n    \n      api.editUserInfo(userData)\n        .then(res => {\n          setCurrentUser(res);\n          closeAllPopups();\n        })\n        .catch(err => console.log(err));\n    }\n\n    function handleUpdateAvatar(user) {\n      api.setAvatar({ avatar: user.avatar })\n        .then(res => {\n          setCurrentUser(res);\n          closeAllPopups();\n        })\n        .catch(err => console.log(err))\n    }\n\n    function handleAddPlaceSubmit(card) {\n      const cardData = {\n        name: card.name,\n        link: card.link,\n        owner: currentUser._id\n      };\n    \n      api.addCard(cardData)\n        .then(newCard => {\n          setCards([newCard, ...cards]);\n          closeAllPopups();\n        })\n        .catch(err => console.log(err))\n    }\n\n  \n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"root\">\n        \n        <PopupWithForm />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <EditProfilePopup \n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPlacePopup \n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n      \n        <ImagePopup\n          onClose={closeAllPopups}\n          card={selectedCard}\n        />\n        \n        <Header />\n        <Main \n          userAvatar={userAvatar}\n          userName={userName}\n          userDescription={userDescription}\n          onEditAvatar = { handleEditAvatarClick }\n          onEditProfile = { handleEditProfileClick }\n          onAddPlace = { handleAddPlaceClick }\n          cards={cards}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n        <Footer />\n        \n      </div>\n    </CurrentUserContext.Provider> \n    \n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}