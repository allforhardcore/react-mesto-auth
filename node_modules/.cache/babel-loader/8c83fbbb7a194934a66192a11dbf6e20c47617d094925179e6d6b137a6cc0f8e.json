{"ast":null,"code":"var _jsxFileName = \"/Users/mejlumian/Documents/Practicum/Dev/mesto-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/header/Header';\nimport Main from './components/main/Main';\nimport Footer from './components/footer/Footer';\nimport PopupWithForm from './components/PopupWithForm/PopupWithForm';\nimport EditAvatarPopup from './components/EditAvatarPopup/EditAvatarPopup';\nimport EditProfilePopup from './components/EditProfilePopup/EditProfilePopup';\nimport AddPlacePopup from './components/AddPlacePopup/AddPlacePopup';\nimport ImagePopup from './components/ImagePopup/ImagePopup';\nimport api from './utils/Api';\nimport CurrentUserContext from './contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = useState({});\n  useEffect(() => {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => console.log(err));\n  }, []);\n\n  // Стейты попапов\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsEditPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [userName, setUserName] = useState(''); // стейт для userName\n  const [userDescription, setUserDescription] = useState(''); // стейт для userDescription\n  const [userAvatar, setUserAvatar] = useState(''); // стейт для userAvatar\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    const fetchUserData = () => {\n      return api.getUserInfo().then(userData => {\n        setUserName(userData.name); // Обновляем стейт имени\n        setUserDescription(userData.about); // Обновляем стейт описания\n        setUserAvatar(userData.avatar); // Обновляем стейт URL аватара\n      }).catch(error => {\n        console.error('Ошибка при загрузке пользовательских данных:', error);\n      });\n    };\n    const fetchCards = () => {\n      return api.getInitialCards().then(cardsData => {\n        setCards(cardsData); // Обновляем стейт карточек\n      }).catch(error => {\n        console.error('Ошибка при загрузке карточек:', error);\n      });\n    };\n    Promise.all([fetchUserData(), fetchCards()]);\n  }, []);\n  function handleCardClick(props) {\n    setSelectedCard(props);\n  }\n\n  // Обработчик открытия попапа аватара\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  // Обработчик открытия попапа профиля\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  // Обработчик открытия попапа добавления карточки\n  function handleAddPlaceClick() {\n    setIsEditPlacePopupOpen(true);\n  }\n  function closeAllPopups() {\n    setIsEditPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  }\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем статус лайка на карточке\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  }\n\n  // Функция удаления карточки\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards.filter(item => item._id !== card._id));\n    }).catch(err => console.log(err));\n  }\n  function handleUpdateUser(user) {\n    const userData = {\n      name: user.name,\n      about: user.about\n    };\n    api.editUserInfo(userData).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n  function handleUpdateAvatar(user) {\n    api.setAvatar({\n      avatar: user.avatar\n    }).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n  function handleAddPlaceSubmit(card) {\n    const cardData = {\n      name: card.name,\n      link: card.about\n    };\n    api.addCard(cardData).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(PopupWithForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        onClose: closeAllPopups,\n        name: \"confirm-delete\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        buttonName: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        onClose: closeAllPopups,\n        card: selectedCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        userAvatar: userAvatar,\n        userName: userName,\n        userDescription: userDescription,\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        cards: cards,\n        onCardClick: handleCardClick,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8lBvM7H5O6q8qYROepO4+1VLECo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Main","Footer","PopupWithForm","EditAvatarPopup","EditProfilePopup","AddPlacePopup","ImagePopup","api","CurrentUserContext","jsxDEV","_jsxDEV","App","_s","currentUser","setCurrentUser","getUserInfo","then","res","catch","err","console","log","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsEditPlacePopupOpen","selectedCard","setSelectedCard","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","fetchUserData","userData","name","about","avatar","error","fetchCards","getInitialCards","cardsData","Promise","all","handleCardClick","props","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","item","handleUpdateUser","user","editUserInfo","handleUpdateAvatar","setAvatar","handleAddPlaceSubmit","cardData","link","addCard","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","onUpdateAvatar","onUpdateUser","onAddPlace","title","buttonName","onEditAvatar","onEditProfile","onCardClick","onCardLike","onCardDelete","_c","$RefreshReg$"],"sources":["/Users/mejlumian/Documents/Practicum/Dev/mesto-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport Header from './components/header/Header';\nimport Main from './components/main/Main';\nimport Footer from './components/footer/Footer';\nimport PopupWithForm from './components/PopupWithForm/PopupWithForm';\nimport EditAvatarPopup from './components/EditAvatarPopup/EditAvatarPopup';\nimport EditProfilePopup from './components/EditProfilePopup/EditProfilePopup';\nimport AddPlacePopup from './components/AddPlacePopup/AddPlacePopup';\nimport ImagePopup from './components/ImagePopup/ImagePopup';\nimport api from './utils/Api';\nimport CurrentUserContext from './contexts/CurrentUserContext';\n\nfunction App() {\n\n  const [currentUser, setCurrentUser] = useState({});\n\n  useEffect(() => {\n    api.getUserInfo()\n      .then(res => {\n        setCurrentUser(res)\n      })\n      .catch(err => console.log(err));\n  }, [])\n\n  // Стейты попапов\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false); \n  const [isAddPlacePopupOpen, setIsEditPlacePopupOpen] = useState(false); \n\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  const [userName, setUserName] = useState(''); // стейт для userName\n  const [userDescription, setUserDescription] = useState(''); // стейт для userDescription\n  const [userAvatar, setUserAvatar] = useState(''); // стейт для userAvatar\n  const [cards, setCards] = useState([]); \n\n  useEffect(() => {\n    const fetchUserData = () => {\n      return api.getUserInfo()\n        .then(userData => {\n          setUserName(userData.name); // Обновляем стейт имени\n          setUserDescription(userData.about); // Обновляем стейт описания\n          setUserAvatar(userData.avatar); // Обновляем стейт URL аватара\n        })\n        .catch(error => {\n          console.error('Ошибка при загрузке пользовательских данных:', error);\n        });\n    };\n\n    const fetchCards = () => {\n      return api.getInitialCards()\n        .then(cardsData => {\n          setCards(cardsData); // Обновляем стейт карточек\n        })\n        .catch(error => {\n          console.error('Ошибка при загрузке карточек:', error);\n        });\n    };\n  \n    Promise.all([fetchUserData(), fetchCards()])\n  \n  }, []);\n\n  \n  function handleCardClick(props) {\n    setSelectedCard(props);\n  }\n\n\n  // Обработчик открытия попапа аватара\n  function handleEditAvatarClick () { \n    setIsEditAvatarPopupOpen(true) \n  }\n  // Обработчик открытия попапа профиля\n  function handleEditProfileClick () { \n    setIsEditProfilePopupOpen(true) \n  }\n  // Обработчик открытия попапа добавления карточки\n  function handleAddPlaceClick () {\n     setIsEditPlacePopupOpen(true) \n    }\n\n  function closeAllPopups() {\n      setIsEditPlacePopupOpen(false);\n      setIsEditAvatarPopupOpen(false);\n      setIsEditProfilePopupOpen(false);\n      setSelectedCard(null);\n    }\n\n    function handleCardLike(card) {\n      // Снова проверяем, есть ли уже лайк на этой карточке\n      const isLiked = card.likes.some(i => i._id === currentUser._id);\n  \n      // Отправляем запрос в API и получаем статус лайка на карточке\n      api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    })\n        .catch(err => console.log(err));\n    }\n\n    // Функция удаления карточки\n    function handleCardDelete(card) {\n      api.deleteCard(card._id)\n        .then(() => {\n          setCards(cards.filter(item => item._id !== card._id));\n        })\n        .catch(err => console.log(err));\n    }\n\n    function handleUpdateUser(user) {\n      const userData = {\n        name: user.name,\n        about: user.about\n      };\n    \n      api.editUserInfo(userData)\n        .then(res => {\n          setCurrentUser(res);\n          closeAllPopups();\n        })\n        .catch(err => console.log(err));\n    }\n\n    function handleUpdateAvatar(user) {\n      api.setAvatar({ avatar: user.avatar })\n        .then(res => {\n          setCurrentUser(res);\n          closeAllPopups();\n        })\n        .catch(err => console.log(err))\n    }\n\n    function handleAddPlaceSubmit(card) {\n      const cardData = {\n        name: card.name,\n        link: card.about\n      };\n    \n      api.addCard(cardData)\n        .then(newCard => {\n          setCards([newCard, ...cards]);\n          closeAllPopups();\n        })\n        .catch(err => console.log(err))\n    }\n\n  \n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"root\">\n        \n        <PopupWithForm />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <EditProfilePopup \n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPlacePopup \n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n\n        <PopupWithForm\n          onClose={closeAllPopups}\n          name=\"confirm-delete\"\n          title=\"Вы уверены?\"\n          buttonName=\"Да\"\n        />\n      \n        <ImagePopup\n          onClose={closeAllPopups}\n          card={selectedCard}\n        />\n        \n        <Header />\n        <Main \n          userAvatar={userAvatar}\n          userName={userName}\n          userDescription={userDescription}\n          onEditAvatar = { handleEditAvatarClick }\n          onEditProfile = { handleEditProfileClick }\n          onAddPlace = { handleAddPlaceClick }\n          cards={cards}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n        <Footer />\n        \n      </div>\n    </CurrentUserContext.Provider> \n    \n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}