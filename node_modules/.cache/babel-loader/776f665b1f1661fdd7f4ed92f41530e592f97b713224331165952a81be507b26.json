{"ast":null,"code":"var _jsxFileName = \"/Users/mejlumian/Documents/Practicum/Dev/mesto-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from './components/header/Header';\nimport Main from './components/main/Main';\nimport Footer from './components/footer/Footer';\nimport PopupWithForm from './components/PopupWithForm/PopupWithForm';\nimport PopupAvatar from './components/PopupAvatar/PopupAvatar';\nimport PopupProfile from './components/PopupProfile/PopupProfile';\nimport PopupPlace from './components/PopupPlace/PopupPlace';\nimport PopupImage from './components/PopupImage/PopupImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Стейты попапов\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsEditPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    const fetchUserData = () => {\n      return api.getUserInfo().then(userData => {\n        setUserName(userData.name); // Обновляем стейт имени\n        setUserDescription(userData.about); // Обновляем стейт описания\n        setUserAvatar(userData.avatar); // Обновляем стейт URL аватара\n      }).catch(error => {\n        console.error('Ошибка при загрузке пользовательских данных:', error);\n      });\n    };\n    const fetchCards = () => {\n      return api.getInitialCards().then(cardsData => {\n        setCards(cardsData); // Обновляем стейт карточек\n      }).catch(error => {\n        console.error('Ошибка при загрузке карточек:', error);\n      });\n    };\n    Promise.all([fetchUserData(), fetchCards()]);\n  }, []);\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  // Обработчик открытия попапа аватара\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  // Обработчик открытия попапа профиля\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  // Обработчик открытия попапа добавления карточки\n  function handleAddPlaceClick() {\n    setIsEditPlacePopupOpen(true);\n  }\n  function closeAllPopups() {\n    setIsEditPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(PopupWithForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupAvatar, {\n      isOpen: isEditAvatarPopupOpen,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupProfile, {\n      isOpen: isEditProfilePopupOpen,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupPlace, {\n      isOpen: isAddPlacePopupOpen,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n      onClose: closeAllPopups,\n      name: \"confirm-delete\",\n      title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n      buttonName: \"\\u0414\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupImage, {\n      onClose: closeAllPopups,\n      card: selectedCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      onEditAvatar: handleEditAvatarClick,\n      onEditProfile: handleEditProfileClick,\n      onAddPlace: handleAddPlaceClick,\n      handleCardClick: handleCardClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8meMbed5nx79M1LmZ+0YwZLGkdc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","Main","Footer","PopupWithForm","PopupAvatar","PopupProfile","PopupPlace","PopupImage","jsxDEV","_jsxDEV","App","_s","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsEditPlacePopupOpen","selectedCard","setSelectedCard","cards","setCards","useEffect","fetchUserData","api","getUserInfo","then","userData","setUserName","name","setUserDescription","about","setUserAvatar","avatar","catch","error","console","fetchCards","getInitialCards","cardsData","Promise","all","handleCardClick","card","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","title","buttonName","onEditAvatar","onEditProfile","onAddPlace","_c","$RefreshReg$"],"sources":["/Users/mejlumian/Documents/Practicum/Dev/mesto-react/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from './components/header/Header';\nimport Main from './components/main/Main';\nimport Footer from './components/footer/Footer';\nimport PopupWithForm from './components/PopupWithForm/PopupWithForm';\nimport PopupAvatar from './components/PopupAvatar/PopupAvatar';\nimport PopupProfile from './components/PopupProfile/PopupProfile';\nimport PopupPlace from './components/PopupPlace/PopupPlace';\nimport PopupImage from './components/PopupImage/PopupImage';\n\nfunction App() {\n\n  // Стейты попапов\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false); \n  const [isAddPlacePopupOpen, setIsEditPlacePopupOpen] = useState(false); \n\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    const fetchUserData = () => {\n      return api.getUserInfo()\n        .then(userData => {\n          setUserName(userData.name); // Обновляем стейт имени\n          setUserDescription(userData.about); // Обновляем стейт описания\n          setUserAvatar(userData.avatar); // Обновляем стейт URL аватара\n        })\n        .catch(error => {\n          console.error('Ошибка при загрузке пользовательских данных:', error);\n        });\n    };\n\n    const fetchCards = () => {\n      return api.getInitialCards()\n        .then(cardsData => {\n          setCards(cardsData); // Обновляем стейт карточек\n        })\n        .catch(error => {\n          console.error('Ошибка при загрузке карточек:', error);\n        });\n    };\n  \n    Promise.all([fetchUserData(), fetchCards()])\n  \n  }, []);\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  \n\n  // Обработчик открытия попапа аватара\n  function handleEditAvatarClick () { \n    setIsEditAvatarPopupOpen(true) \n  }\n  // Обработчик открытия попапа профиля\n  function handleEditProfileClick () { \n    setIsEditProfilePopupOpen(true) \n  }\n  // Обработчик открытия попапа добавления карточки\n  function handleAddPlaceClick () {\n     setIsEditPlacePopupOpen(true) \n    }\n\n  function closeAllPopups() {\n    setIsEditPlacePopupOpen(false);\n      setIsEditAvatarPopupOpen(false);\n      setIsEditProfilePopupOpen(false);\n    }\n  \n  return (\n    <div className=\"root\">\n      <PopupWithForm />\n      <PopupAvatar\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n      />\n      <PopupProfile \n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n      />\n      <PopupPlace \n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n      />\n\n      <PopupWithForm\n        onClose={closeAllPopups}\n        name=\"confirm-delete\"\n        title=\"Вы уверены?\"\n        buttonName=\"Да\"\n      />\n     \n      <PopupImage \n        onClose={closeAllPopups}\n        card={selectedCard}\n      />\n      \n      <Header />\n      <Main \n        onEditAvatar = { handleEditAvatarClick }\n        onEditProfile = { handleEditProfileClick }\n        onAddPlace = { handleAddPlaceClick }\n        handleCardClick={handleCardClick}\n      />\n      <Footer />\n      \n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}