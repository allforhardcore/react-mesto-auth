{"ast":null,"code":"var _jsxFileName = \"/Users/mejlumian/Documents/Practicum/Dev/mesto-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/header/Header';\nimport Main from './components/main/Main';\nimport Footer from './components/footer/Footer';\nimport PopupWithForm from './components/PopupWithForm/PopupWithForm';\nimport PopupAvatar from './components/PopupAvatar/PopupAvatar';\nimport PopupProfile from './components/PopupProfile/PopupProfile';\nimport PopupPlace from './components/PopupPlace/PopupPlace';\nimport ImagePopup from './components/ImagePopup/ImagePopup';\nimport api from './utils/Api';\nimport CurrentUserContext from './contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //Стейт для данных пользователя\n  const [currentUser, setCurrentUser] = useState({});\n  useEffect(() => {\n    api.getUserData().then(res => {\n      setCurrentUser(res);\n    }).catch(err => console.log(err));\n  }, []);\n\n  // Стейты попапов\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsEditPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [userName, setUserName] = useState(''); // стейт для userName\n  const [userDescription, setUserDescription] = useState(''); // стейт для userDescription\n  const [userAvatar, setUserAvatar] = useState(''); // стейт для userAvatar\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    const fetchUserData = () => {\n      return api.getUserInfo().then(userData => {\n        setUserName(userData.name); // Обновляем стейт имени\n        setUserDescription(userData.about); // Обновляем стейт описания\n        setUserAvatar(userData.avatar); // Обновляем стейт URL аватара\n      }).catch(error => {\n        console.error('Ошибка при загрузке пользовательских данных:', error);\n      });\n    };\n    const fetchCards = () => {\n      return api.getInitialCards().then(cardsData => {\n        setCards(cardsData); // Обновляем стейт карточек\n      }).catch(error => {\n        console.error('Ошибка при загрузке карточек:', error);\n      });\n    };\n    Promise.all([fetchUserData(), fetchCards()]);\n  }, []);\n  function handleCardClick(props) {\n    setSelectedCard(props);\n  }\n\n  // Обработчик открытия попапа аватара\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  // Обработчик открытия попапа профиля\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  // Обработчик открытия попапа добавления карточки\n  function handleAddPlaceClick() {\n    setIsEditPlacePopupOpen(true);\n  }\n  function closeAllPopups() {\n    setIsEditPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  }\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  }\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards.filter(item => item._id !== card._id));\n    }).catch(err => console.log(err));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(PopupWithForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupAvatar, {\n      isOpen: isEditAvatarPopupOpen,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupProfile, {\n      isOpen: isEditProfilePopupOpen,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupPlace, {\n      isOpen: isAddPlacePopupOpen,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n      onClose: closeAllPopups,\n      name: \"confirm-delete\",\n      title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n      buttonName: \"\\u0414\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n      onClose: closeAllPopups,\n      card: selectedCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      userAvatar: userAvatar,\n      userName: userName,\n      userDescription: userDescription,\n      onEditAvatar: handleEditAvatarClick,\n      onEditProfile: handleEditProfileClick,\n      onAddPlace: handleAddPlaceClick,\n      cards: cards,\n      onCardClick: handleCardClick,\n      onCardLike: handleCardLike,\n      onCardDelete: handleCardDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8lBvM7H5O6q8qYROepO4+1VLECo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Main","Footer","PopupWithForm","PopupAvatar","PopupProfile","PopupPlace","ImagePopup","api","CurrentUserContext","jsxDEV","_jsxDEV","App","_s","currentUser","setCurrentUser","getUserData","then","res","catch","err","console","log","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsEditPlacePopupOpen","selectedCard","setSelectedCard","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","fetchUserData","getUserInfo","userData","name","about","avatar","error","fetchCards","getInitialCards","cardsData","Promise","all","handleCardClick","props","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","title","buttonName","onEditAvatar","onEditProfile","onAddPlace","onCardClick","onCardLike","onCardDelete","_c","$RefreshReg$"],"sources":["/Users/mejlumian/Documents/Practicum/Dev/mesto-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport Header from './components/header/Header';\nimport Main from './components/main/Main';\nimport Footer from './components/footer/Footer';\nimport PopupWithForm from './components/PopupWithForm/PopupWithForm';\nimport PopupAvatar from './components/PopupAvatar/PopupAvatar';\nimport PopupProfile from './components/PopupProfile/PopupProfile';\nimport PopupPlace from './components/PopupPlace/PopupPlace';\nimport ImagePopup from './components/ImagePopup/ImagePopup';\nimport api from './utils/Api';\nimport CurrentUserContext from './contexts/CurrentUserContext';\n\nfunction App() {\n\n //Стейт для данных пользователя\n const [currentUser, setCurrentUser] = useState({});\n\n useEffect(() => {\n   api.getUserData()\n     .then(res => {\n       setCurrentUser(res)\n     })\n     .catch(err => console.log(err));\n }, [])\n\n  // Стейты попапов\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false); \n  const [isAddPlacePopupOpen, setIsEditPlacePopupOpen] = useState(false); \n\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  const [userName, setUserName] = useState(''); // стейт для userName\n  const [userDescription, setUserDescription] = useState(''); // стейт для userDescription\n  const [userAvatar, setUserAvatar] = useState(''); // стейт для userAvatar\n  const [cards, setCards] = useState([]); \n\n  useEffect(() => {\n    const fetchUserData = () => {\n      return api.getUserInfo()\n        .then(userData => {\n          setUserName(userData.name); // Обновляем стейт имени\n          setUserDescription(userData.about); // Обновляем стейт описания\n          setUserAvatar(userData.avatar); // Обновляем стейт URL аватара\n        })\n        .catch(error => {\n          console.error('Ошибка при загрузке пользовательских данных:', error);\n        });\n    };\n\n    const fetchCards = () => {\n      return api.getInitialCards()\n        .then(cardsData => {\n          setCards(cardsData); // Обновляем стейт карточек\n        })\n        .catch(error => {\n          console.error('Ошибка при загрузке карточек:', error);\n        });\n    };\n  \n    Promise.all([fetchUserData(), fetchCards()])\n  \n  }, []);\n\n  \n  function handleCardClick(props) {\n    setSelectedCard(props);\n  }\n\n\n  // Обработчик открытия попапа аватара\n  function handleEditAvatarClick () { \n    setIsEditAvatarPopupOpen(true) \n  }\n  // Обработчик открытия попапа профиля\n  function handleEditProfileClick () { \n    setIsEditProfilePopupOpen(true) \n  }\n  // Обработчик открытия попапа добавления карточки\n  function handleAddPlaceClick () {\n     setIsEditPlacePopupOpen(true) \n    }\n\n  function closeAllPopups() {\n      setIsEditPlacePopupOpen(false);\n      setIsEditAvatarPopupOpen(false);\n      setIsEditProfilePopupOpen(false);\n      setSelectedCard(null);\n    }\n\n    function handleCardLike(card) {\n      // Снова проверяем, есть ли уже лайк на этой карточке\n      const isLiked = card.likes.some(i => i._id === currentUser._id);\n  \n      // Отправляем запрос в API и получаем обновлённые данные карточки\n      api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    })\n        .catch(err => console.log(err));\n    }\n\n    function handleCardDelete(card) {\n      api.deleteCard(card._id)\n        .then(() => {\n          setCards(cards.filter(item => item._id !== card._id));\n        })\n        .catch(err => console.log(err));\n    }\n\n  \n  return (\n    <div className=\"root\">\n      <PopupWithForm />\n      <PopupAvatar\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n      />\n      <PopupProfile \n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n      />\n      <PopupPlace \n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n      />\n\n      <PopupWithForm\n        onClose={closeAllPopups}\n        name=\"confirm-delete\"\n        title=\"Вы уверены?\"\n        buttonName=\"Да\"\n      />\n     \n      <ImagePopup\n        onClose={closeAllPopups}\n        card={selectedCard}\n      />\n      \n      <Header />\n      <Main \n        userAvatar={userAvatar}\n        userName={userName}\n        userDescription={userDescription}\n        onEditAvatar = { handleEditAvatarClick }\n        onEditProfile = { handleEditProfileClick }\n        onAddPlace = { handleAddPlaceClick }\n        cards={cards}\n        onCardClick={handleCardClick}\n        onCardLike={handleCardLike}\n        onCardDelete={handleCardDelete}\n      \n      />\n      <Footer />\n      \n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}